(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{376:function(t,a,s){"use strict";s.r(a);var r=s(3),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"_1-复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-复杂度"}},[t._v("#")]),t._v(" 1. 复杂度")]),t._v(" "),a("h4",{attrs:{id:"时间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[t._v("#")]),t._v(" 时间复杂度")]),t._v(" "),a("p",[t._v("时间复杂度指的是算法执行时间与输入值之间的关系。")]),t._v(" "),a("p",[t._v("一段代码判断时间复杂度一般看有没有for循环、while循环。")]),t._v(" "),a("p",[t._v("o(1) < o(logN) < o(N) <o(NlogN) <o(N**2) <...")]),t._v(" "),a("h4",{attrs:{id:"空间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度"}},[t._v("#")]),t._v(" 空间复杂度")]),t._v(" "),a("p",[t._v("空间复杂度指的是算法存储空间与输入值之间的关系。")]),t._v(" "),a("p",[t._v("一段代码的空间复杂度一般看变量和有没有递归，一段递归不去使用也占o(N)、o(N**2)。")]),t._v(" "),a("h3",{attrs:{id:"_2-数组array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-数组array"}},[t._v("#")]),t._v(" 2. 数组Array")]),t._v(" "),a("p",[t._v("在"),a("strong",[t._v("连续的空间")]),t._v("中存储一组"),a("strong",[t._v("相同类型")]),t._v("的元素。")]),t._v(" "),a("p",[t._v("特点：适合读不适合写，读多写少的场景。")]),t._v(" "),a("h4",{attrs:{id:"数组访问与搜索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组访问与搜索"}},[t._v("#")]),t._v(" 数组访问与搜索")]),t._v(" "),a("p",[t._v("数组访问：根据索引去访问元素。 o(1),数组是可以知道第一个元素的地址的。")]),t._v(" "),a("p",[t._v("数组搜索：去数组找某一个元素。 o(N)，搜索一个数我们需要遍历数组。")]),t._v(" "),a("p",[t._v("插入：o(N)。插入一般需要将后面的元素全部向后移动一个位置再去插入。")]),t._v(" "),a("p",[t._v("删除：o(N)。删除的话需要删除并将后面的元素前移。")]),t._v(" "),a("h4",{attrs:{id:"_3-java数组操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-java数组操作"}},[t._v("#")]),t._v(" 3.Java数组操作")]),t._v(" "),a("p",[t._v("创建与添加：")]),t._v(" "),a("p",[t._v("方式一去添加元素比较麻烦，方式二直接add就行。")]),t._v(" "),a("p",[t._v("方式一获取数组长度与查找元素："),a("code",[t._v("a.length;")]),t._v("，"),a("code",[t._v("for循环遍历与if判断")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("方式一： "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("；\n方式二： "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//arr.add(i)去添加，不需要你知道里面有几个元素和什么元素")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("在某个位置添加元素，比如在索引3的位置添加99这个元素,\t"),a("code",[t._v("arr.add(3,99);")])]),t._v(" "),a("p",[a("strong",[t._v("ArrayList元素访问、更新（修改）、删除等：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("元素访问：方式二的话用get方法。")])]),t._v(" "),a("li",[a("p",[t._v("更新元素："),a("code",[t._v("arr.set(1,99);")])])]),t._v(" "),a("li",[a("p",[t._v("删除元素: "),a("code",[t._v("arr.remove(3);")]),t._v(" 复杂度o（N）")])]),t._v(" "),a("li",[a("p",[t._v("获取长度："),a("code",[t._v("arr.size();")])])]),t._v(" "),a("li",[a("p",[t._v("数组遍历：for循环")])]),t._v(" "),a("li",[a("p",[t._v("查找元素："),a("code",[t._v("arr.contains(99);")]),t._v("返回的是true和false")])])]),t._v(" "),a("p",[a("strong",[t._v("数组排序:(默认从小到大)， 时间复杂度o(NlogN)")])]),t._v(" "),a("p",[t._v("对于方式一创建的数组："),a("code",[t._v("Arrays.sort(a);")])]),t._v(" "),a("p",[t._v("对于方式二创建的数组: "),a("code",[t._v("Collections.sort(arr);")])]),t._v(" "),a("p",[a("strong",[t._v("从大到小排序：")])]),t._v(" "),a("p",[t._v("方式二："),a("code",[t._v("Collection.sort(arr,reverseOrder);")])]),t._v(" "),a("p",[t._v("方式一：需要转成对象，如int需要转成Interger类型的。然后"),a("code",[t._v("Array.sort(c, Collections.reverseOrder());")])])])}),[],!1,null,null,null);a.default=e.exports}}]);
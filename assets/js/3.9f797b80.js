(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{317:function(s,t,a){s.exports=a.p+"assets/img/image-20220913145200469.0652033c.png"},318:function(s,t,a){s.exports=a.p+"assets/img/image-20220913151215553.2f1553ab.png"},319:function(s,t,a){s.exports=a.p+"assets/img/image-20220913160558752.aa5a415d.png"},320:function(s,t,a){s.exports=a.p+"assets/img/image-20220913162433438.09c33e4b.png"},321:function(s,t,a){s.exports=a.p+"assets/img/image-20220913162452318.1e896e9f.png"},322:function(s,t,a){s.exports=a.p+"assets/img/image-20220913164935745.5d5d51cd.png"},323:function(s,t,a){s.exports=a.p+"assets/img/image-20220913191342449.6818579b.png"},324:function(s,t,a){s.exports=a.p+"assets/img/image-20220913191320548.5dfcbf04.png"},325:function(s,t,a){s.exports=a.p+"assets/img/image-20220913192750365.930d39bc.png"},326:function(s,t,a){s.exports=a.p+"assets/img/image-20220914170853458.74ce128b.png"},327:function(s,t,a){s.exports=a.p+"assets/img/image-20220914171109921.d93d2f38.png"},328:function(s,t,a){s.exports=a.p+"assets/img/image-20220915153513999.5ac1e852.png"},329:function(s,t,a){s.exports=a.p+"assets/img/image-20220915154508727.a8edbd23.png"},330:function(s,t,a){s.exports=a.p+"assets/img/image-20220915154740642.4b9f0742.png"},331:function(s,t,a){s.exports=a.p+"assets/img/image-20220915155410955.103c7c67.png"},332:function(s,t,a){s.exports=a.p+"assets/img/image-20220915155652080.7862ae86.png"},333:function(s,t,a){s.exports=a.p+"assets/img/image-20220915155836689.80bf99d7.png"},334:function(s,t,a){s.exports=a.p+"assets/img/image-20220916092202287.048d3ba5.png"},335:function(s,t,a){s.exports=a.p+"assets/img/image-20220916093732662.a5f1645f.png"},336:function(s,t,a){s.exports=a.p+"assets/img/image-20220916094222202.cbe0fb23.png"},337:function(s,t,a){s.exports=a.p+"assets/img/image-20220916094328182.ef404074.png"},338:function(s,t,a){s.exports=a.p+"assets/img/image-20220916100909448.efb7cd70.png"},339:function(s,t,a){s.exports=a.p+"assets/img/image-20220916185724384.9728986f.png"},340:function(s,t,a){s.exports=a.p+"assets/img/image-20220916191808288.021010ae.png"},341:function(s,t,a){s.exports=a.p+"assets/img/image-20220916192153701.16f6bfe7.png"},365:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"存储引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎"}},[s._v("#")]),s._v(" 存储引擎")]),s._v(" "),t("p",[t("strong",[s._v("体系结构图")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(317),alt:"image-20220913145200469"}})]),s._v(" "),t("h4",{attrs:{id:"存储引擎-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎-2"}},[s._v("#")]),s._v(" "),t("strong",[s._v("存储引擎")])]),s._v(" "),t("p",[s._v("存储引擎就是存储数据、建立索引、更新/查询数据等技术的实现方式。存储引擎是基于表的，而不是基于库的，所以存储类型也可被称为表类型。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询当前数据库支持的存储引擎")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" engines"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建表并指定引擎 [例]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" my_myisam"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("engine")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" MyISAM"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("strong",[s._v("InnoDB引擎")])]),s._v(" "),t("p",[s._v("是一种兼顾高可靠性和高性能的通用存储引擎。")]),s._v(" "),t("p",[t("strong",[s._v("特点")]),s._v("：DML操作遵循ACID（事务的四大特性）模型，"),t("strong",[s._v("支持事务")]),s._v("；"),t("strong",[s._v("行级锁")]),s._v("，提高并发访问性能；"),t("strong",[s._v("支持外键")]),s._v("FOREIGN KEY约束，保证数据的完整性和正确性。")]),s._v(" "),t("p",[t("strong",[s._v("InnoDB逻辑存储结构")])]),s._v(" "),t("p",[s._v("表空间、段、区、页、行")]),s._v(" "),t("p",[t("img",{attrs:{src:a(318),alt:"image-20220913151215553"}})]),s._v(" "),t("p",[s._v("表空间中包含多段，段中包含多区，区中包含多页，也中包含多行。行指的就是我们在表中的一行一行。")]),s._v(" "),t("p",[s._v("每row行中就是事务的Id、指针、一个一个的字段。一个页16k，一个区1M最多包含64个页。")]),s._v(" "),t("p",[t("strong",[s._v("MyISAM")])]),s._v(" "),t("p",[s._v("MyISAM是MySQL早期的默认存储引擎。特点：不支持事务，不支持外键；支持表锁，不支持行锁；访问速度快。")]),s._v(" "),t("p",[t("strong",[s._v("Memory")])]),s._v(" "),t("p",[s._v("Memory引擎的表数据存在内存中，受硬件问题或断电问题影响，只能作为临时表或缓存使用。")]),s._v(" "),t("p",[s._v("特点：内存存放、hash索引（默认）")]),s._v(" "),t("h3",{attrs:{id:"索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[s._v("#")]),s._v(" 索引")]),s._v(" "),t("p",[s._v("索引：帮助MySQL高效获取数据的数据结构(有序)。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(319),alt:"image-20220913160558752"}})]),s._v(" "),t("p",[s._v("优点：提高数据检索的效率，降低数据库的IO成本。")]),s._v(" "),t("p",[s._v("​\t\t通过索引对数据进行排序，降低数据排序的成本，降低CPU的消耗。")]),s._v(" "),t("p",[s._v("缺点：索引列也要占空间。")]),s._v(" "),t("p",[s._v("​\t\t大大提高了查询效率，但降低了更新表的速度。")]),s._v(" "),t("h4",{attrs:{id:"索引结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引结构"}},[s._v("#")]),s._v(" 索引结构")]),s._v(" "),t("p",[t("img",{attrs:{src:a(320),alt:"image-20220913162433438"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(321),alt:"image-20220913162452318"}})]),s._v(" "),t("h4",{attrs:{id:"btree"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#btree"}},[s._v("#")]),s._v(" Btree")]),s._v(" "),t("p",[s._v("B+树相对于B树区别：")]),s._v(" "),t("ul",[t("li",[s._v("所有数据都会出现在叶子节点")]),s._v(" "),t("li",[s._v("叶子节点形成一个单向链表")])]),s._v(" "),t("p",[s._v("B+树，数据的存储在叶子节点，索引节点不存储数据")]),s._v(" "),t("p",[t("img",{attrs:{src:a(322),alt:"image-20220913164935745"}})]),s._v(" "),t("h4",{attrs:{id:"hash索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash索引"}},[s._v("#")]),s._v(" hash索引")]),s._v(" "),t("p",[s._v("哈希索引就是采用一定的hash算法，将键值换算成新的hash值，映射到对应的槽位上，然后存储在hash表中。")]),s._v(" "),t("p",[s._v("链表可以解决hash冲突。不支持范围查询。")]),s._v(" "),t("p",[s._v("支持hash索引的是Memory引擎，InnoDB具有自适应hash功能。")]),s._v(" "),t("p",[t("strong",[s._v("InnoDB存储引擎使用B+tree索引结构原因：")])]),s._v(" "),t("ul",[t("li",[s._v("相对于二叉树，层级更少，搜索销量高；")]),s._v(" "),t("li",[s._v("对于B-tree，无论叶子节点还是非叶子节点，都会保存数据，这样导致一页中存储的键值更少，指针跟着减少，要同样保存大量数据，只能增加树的高度，导致性能降低；")]),s._v(" "),t("li",[s._v("相对于hash索引，B+tree支持范围匹配及排序操作；")])]),s._v(" "),t("p",[t("strong",[s._v("索引分类")])]),s._v(" "),t("p",[s._v("主键索引(只能有一个)、唯一索引（可以避免同一个变种某数据列中的值重复）、常规索引、全文索引FULLTEXT")]),s._v(" "),t("p",[t("img",{attrs:{src:a(323),alt:"image-20220913191342449"}})]),s._v(" "),t("p",[s._v("聚集索引、二级索引")]),s._v(" "),t("p",[t("img",{attrs:{src:a(324),alt:"image-20220913191320548"}})]),s._v(" "),t("p",[s._v("聚集索引选取规则：")]),s._v(" "),t("ul",[t("li",[s._v("如果存在主键，主键索引就是聚集索引")]),s._v(" "),t("li",[s._v("如果不存在主键，将使用第一个唯一索引作为聚集索引。")]),s._v(" "),t("li",[s._v("如果没有主键，或没有合适的唯一索引，则InnoDB会自动生成一个rowid作为隐藏的聚集索引。")])]),s._v(" "),t("p",[t("strong",[s._v("回表查询")]),s._v("：先根据二级索引去找，找到对应的id值，再根据聚集索引值拿到对应的行数据。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(325),alt:"image-20220913192750365"}})]),s._v(" "),t("h4",{attrs:{id:"索引语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引语法"}},[s._v("#")]),s._v(" 索引语法")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建索引")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("FULLTEXT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" table_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index_col_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("字段名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看索引")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除索引")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" table_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h4",{attrs:{id:"sql性能分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql性能分析"}},[s._v("#")]),s._v(" SQL性能分析")]),s._v(" "),t("p",[s._v("根据"),t("strong",[s._v("SQL执行频率")]),s._v("，判断此类数据库以什么为主（增删改查）。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查当前数据库的INSERT、UPDATE等访问频次")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GLOBAL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("STATUS")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Com_____'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查服务器状态")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SESSION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GLOBAL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("STATUS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("strong",[s._v("慢查询日志")]),s._v(",记录了所有执行时间超过指定参数（long_query_time，单位秒，默认10秒）等所有SQL语句的日志。")]),s._v(" "),t("p",[s._v("MySQL慢查询日志默认没有开启，需要在MySQL的配置文件（/etc/my.cnf）中配置如下信息：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询慢查询日志是否开启")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" variables "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'slow_query_log'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 开启（在my.cnf）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 开启慢日志查询开关")]),s._v("\nslow_query_log "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 设置慢日志时间,超过该时间就是慢查询，记录慢查询日志")]),s._v("\nlong_query_time "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("strong",[s._v("profile详情")]),s._v(":有些操作执行时间可能达到慢查询时间的左边缘，比如1.95秒，这类SQL也是相对性能较低的，我们也要对这部分SQL进行优化，如何定位到该处sql，慢查询日志满足不了。这时候就要用到profile详情。")]),s._v(" "),t("p",[s._v("show profiles 能够帮助我们了解时间都耗费到哪里去了，通过have_profiling参数,能看到当前数据库是否支持profile操作:"),t("code",[s._v("select @@have_profiling;")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询是否支持profile操作")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" @"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@have_profiling")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询是否开启profiling")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" @"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@profiling")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启session/global级别的profiling")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SESSION")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GLOBAL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" profiling "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看sql耗时情况")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" profiles"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看指定query_id的SQL语句各个阶段的耗时情况")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" profile "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" QUERY query_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看置顶query_id的SQL语句CPU的使用情况")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" profile cpu "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" QUERY query_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[t("strong",[s._v("explain执行计划")]),s._v("，explain或者DESC命令获取mysql如何执行select语句的信息，包括在select语句执行过程中表如何连接和连接的顺序。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 语法-直接在select语句之前加上关键字explain/desc")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPLAIN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" 字段列表 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" 表名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" 条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("explain查询到的执行计划每列的含义:")]),s._v(" "),t("p",[t("img",{attrs:{src:a(326),alt:"image-20220914170853458"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(327),alt:"image-20220914171109921"}})]),s._v(" "),t("h4",{attrs:{id:"索引使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引使用"}},[s._v("#")]),s._v(" 索引使用")]),s._v(" "),t("ul",[t("li",[s._v("验证索引效率，在未建立索引之前，执行如下sql语句，查看sql的耗时。")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据id去查非常快")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_sku "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据sn查（sn这个字段没有索引，数据量多耗时很大）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_sku "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sn "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100000000003145001'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为sn字段创建索引(B+tree结构)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx_sku_sn "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" tb_sku"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再次执行select * from tb_sku where sn = '100000000003145001';耗时非常短")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在select语句前加上explain可查看该语句执行计划")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[t("strong",[s._v("索引使用法则--最左前缀法则")])]),s._v(" "),t("p",[s._v("该法则主要针对于联合索引。如果索引了多列（联合索引），要遵循最左前缀法则。最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。如果跳过了某一列，"),t("strong",[s._v("索引将部分失效（后面的字段索引失效）。")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# profession、age、status是关联的索引，顺序依次是1、2、3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" profession "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'软件工程'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果查的时候将age这个条件删除，将出现部分失效，最后面的status字段将失效。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果查询的时候删除profession条件，将不再走索引查询，不满足最左前缀法则")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("strong",[s._v("索引使用法则--索引失效情况")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("索引列运算，不要在索引列上进行运算操作，否则索引将失效。")])]),s._v(" "),t("li",[t("p",[s._v("字符串类型字段使用时不加引号，索引将失效。")])]),s._v(" "),t("li",[t("p",[s._v("如果头部模糊匹配，索引将失效。（仅仅尾部模糊匹配，索引不会失效）")])]),s._v(" "),t("li",[t("p",[s._v("用or分割开的条件，如果or前的条件的列有索引，而后面的列中没有索引，那么涉及的索引都不会被用到。（只有两侧都有索引，索引才不会失效）")])]),s._v(" "),t("li",[t("p",[s._v("数据分布影响，如果mysql评估使用索引比全表更慢，则不适用索引。")])])]),s._v(" "),t("p",[t("strong",[s._v("SQL提示")])]),s._v(" "),t("p",[s._v("简单来说，就是在SQL语句中加入一些人为的提示来达到优化操作的目的。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(": "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 告诉数据库用哪个索引")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("explain")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("idx_user_pro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" profession "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'软件工程'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ignore")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(": "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 告诉数据库不要用哪个索引")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("explain")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ignore")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("idx_user_pro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" profession "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'软件工程'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("force")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(": "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 告诉数据库必须走这个索引")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("explain")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("force")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("idx_user_pro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" profession "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'软件工程'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("strong",[s._v("覆盖索引")])]),s._v(" "),t("p",[s._v("尽量使用覆盖索引(其实就是select后面怎么写)，减少使用select *；")]),s._v(" "),t("p",[s._v("注（执行explain后extra中出现）：using index condition:查找使用了索引，但是需要回表查询数据")]),s._v(" "),t("p",[s._v("​\t\tusing where; using index:查找使用了索引，但是需要的数据在索引列中都能找到，所以不需要回表查询数据。")]),s._v(" "),t("p",[s._v("如下就是覆盖索引，需要查的在索引列中都能找到，不需要回表。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(328),alt:"image-20220915153513999"}})]),s._v(" "),t("p",[t("strong",[s._v("前缀索引")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(329),alt:"image-20220915154508727"}})]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法 # 此处n表示要提取字符串的前几个字符来构建索引")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx_xxx "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" table_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("前缀长度的确定；")]),s._v(" "),t("p",[t("img",{attrs:{src:a(330),alt:"image-20220915154740642"}})]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 计算公式")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" substring"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("img",{attrs:{src:a(331),alt:"image-20220915155410955"}})]),s._v(" "),t("p",[t("strong",[s._v("单列索引&联合索引")])]),s._v(" "),t("p",[s._v("一个索引包含单个列；一个索引包含多个列；")]),s._v(" "),t("p",[s._v("先按phone来排序，若phone相同，再按name排序")]),s._v(" "),t("p",[t("img",{attrs:{src:a(332),alt:"image-20220915155652080"}})]),s._v(" "),t("h4",{attrs:{id:"索引设计原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引设计原则"}},[s._v("#")]),s._v(" 索引设计原则")]),s._v(" "),t("p",[t("img",{attrs:{src:a(333),alt:"image-20220915155836689"}})]),s._v(" "),t("h3",{attrs:{id:"sql优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql优化"}},[s._v("#")]),s._v(" SQL优化")]),s._v(" "),t("h4",{attrs:{id:"插入优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入优化"}},[s._v("#")]),s._v(" 插入优化")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 插入多条--批量插入(一次性插入的数据不建议超过1000条)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" tb_test "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Cat'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 手动事务提交,正常执行完一条插入语句后，就自动提交了，建议开启手动提交，全部执行完毕后再提交")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("start")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("transaction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" tb_test "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Cat'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" tb_test "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Jerry'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" tb_test "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Cat'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Jerry'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("commit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 主键顺序插入(顺序插入性能要高于乱序插入)")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 大批量插入数据，insert语句性能较低，mysql提供了load指定进行插入。（load加载本地文件到数据库表）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" @"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@local_infile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查询是否开启")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[t("img",{attrs:{src:a(334),alt:"image-20220916092202287"}})]),s._v(" "),t("h4",{attrs:{id:"主键优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主键优化"}},[s._v("#")]),s._v(" 主键优化")]),s._v(" "),t("p",[t("strong",[s._v("数据组织方式")]),s._v("，在InnoDB存储引擎中，表数据都是根据主键顺序组织存放的，这种存储方式的表称为索引组织表。")]),s._v(" "),t("p",[t("strong",[s._v("页分裂")]),s._v("（主键乱序插入可能发生该现象），页可以为空，也可以填充一半，也可以填充100%。每个页中包含2-N行数据（如果一行数据过大，会行溢出），根据主键排列。")]),s._v(" "),t("p",[t("strong",[s._v("页合并")])]),s._v(" "),t("p",[s._v("合并页阈值：merge_threshold可以自己设置，创建表或者索引时指定。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(335),alt:"image-20220916093732662"}})]),s._v(" "),t("p",[t("strong",[s._v("主键设计原则")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(336),alt:"image-20220916094222202"}})]),s._v(" "),t("h4",{attrs:{id:"order-by优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#order-by优化"}},[s._v("#")]),s._v(" order by优化")]),s._v(" "),t("p",[t("img",{attrs:{src:a(337),alt:"image-20220916094328182"}})]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"assets/image-20220916095453438.png",alt:"image-20220916095453438"}}),s._v(" "),t("h4",{attrs:{id:"group-by-优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#group-by-优化"}},[s._v("#")]),s._v(" group by 优化")]),s._v(" "),t("p",[s._v("在分组操作时，可以通过索引来提高效率。")]),s._v(" "),t("p",[s._v("在分组操作时，索引的使用要满足最左前缀法则。")]),s._v(" "),t("h4",{attrs:{id:"limit优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#limit优化"}},[s._v("#")]),s._v(" limit优化")]),s._v(" "),t("p",[s._v("大数据量情况下，越往后耗时越长。")]),s._v(" "),t("p",[s._v("优化思路：一般分页查询时，通过创建 覆盖索引 能比较好地提高性能，可以通过覆盖索引加子查询形式进行优化。")]),s._v(" "),t("h4",{attrs:{id:"count优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#count优化"}},[s._v("#")]),s._v(" count优化")]),s._v(" "),t("p",[s._v("count的几种方法")]),s._v(" "),t("p",[t("img",{attrs:{src:a(338),alt:"image-20220916100909448"}})]),s._v(" "),t("p",[s._v("count(*)、count(主键)、count(字段)会判断数据是否是null，如果不是null则计数加1、count(1)")]),s._v(" "),t("h4",{attrs:{id:"update优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#update优化"}},[s._v("#")]),s._v(" update优化")]),s._v(" "),t("p",[s._v("更新语句时，不提交的话会将整行锁住。（行级锁）")]),s._v(" "),t("p",[s._v("更新的条件为其他字段（不为索引字段）会锁整个表（表锁）。")]),s._v(" "),t("p",[s._v("更新字段时一定要根据索引字段进行更新。")]),s._v(" "),t("h3",{attrs:{id:"视图-存储过程-触发器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#视图-存储过程-触发器"}},[s._v("#")]),s._v(" 视图/存储过程/触发器")]),s._v(" "),t("h4",{attrs:{id:"视图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[s._v("#")]),s._v(" 视图")]),s._v(" "),t("p",[s._v("视图是一种虚拟存在的表，视图中的数据并不在数据库中实际存在。")]),s._v(" "),t("p",[s._v("视图只保存了查询的SQL逻辑，不保存查询结果。在创建视图时，主要工作就落在创建这条SQL查询语句上。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建--如下：视图是一张虚拟表，最终的数据来源于后面的select语句 ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("REPLACE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VIEW")]),s._v(" 视图名称"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("列名列表"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("语句 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WITH")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASCADED")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOCAL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHECK")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("OPTION")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 例")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("replace")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" stu_v_1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" student "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看视图")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 查看创建视图的语句")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VIEW")]),s._v(" 视图名称"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 查看视图数据")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" 视图名称"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改视图")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("replace")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" stu_v_1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("no")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" student "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#直接覆盖")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" stu_v_1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("no")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" student "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#方式2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除视图")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" stu_v_1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("往视图插入数据，数据会存入表中。")]),s._v(" "),t("p",[s._v("检查选项：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(339),alt:"image-20220916185724384"}})]),s._v(" "),t("ul",[t("li",[s._v("cascaded:当视图基于一个视图创建，添加此条件后，两个视图的条件都会去检查。即会检查当前视图和当前视图依赖的所有视图。")]),s._v(" "),t("li",[s._v("local:  定义v1（不添加），基于v1定义v2视图并添加with local check option,基于v2视图定义v3视图（不添加）。此时向v1插入数据是不会检查条件的，向v2添加数据会检查v2的条件，然后去看v1是否添加了检查条件，如果添加了则去校验，如果没有就不去校验。")])]),s._v(" "),t("p",[t("strong",[s._v("更新及作用")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(340),alt:"image-20220916191808288"}})]),s._v(" "),t("p",[s._v("作用：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(341),alt:"image-20220916192153701"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);